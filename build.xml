<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE project>
<!--=========================================================================-->
<!--                                                                         -->
<!--  PROJECT:  buildGapps                                                   -->
<!--            Slimroms (www.slimroms.net)                                  -->
<!--                                                                         -->
<!--  FILE:     build.xml                                                    -->
<!--                                                                         -->
<!--  DESCRIPTION:                                                           -->
<!--                                                                         -->
<!--    builds the gapps                                                     -->
<!--                                                                         -->
<!--  AUTHORS:                                                               -->
<!--                                                                         -->
<!--=========================================================================-->
<project name="buildGapps"
         default="buildAll"
         basedir=".">
    <property file="build.properties"/>
    <description>
        This file list is used by ant to build the Slim Gapps project
    </description>

    <!--=======================================================================-->
    <!-- some variables                                                        -->
    <!--=======================================================================-->
    <property name="app.name" value="buildGapps"/>
    <property name="app.dir" value="${basedir}"/>
    <property name="work.dir" value="${app.dir}/work"/>
    <property name="build.dir" value="${app.dir}/build"/>
    <property name="structure.dir" value="${app.dir}/structure"/>
    <property name="extra.dir" value="${app.dir}/extras"/>
    <property name="sign.jar" value="${app.dir}/tools/signapk.jar"/>
    <property name="sign.pem" value="${app.dir}/tools/testkey.x509.pem"/>
    <property name="sign.pk8" value="${app.dir}/tools/testkey.pk8"/>

    <tstamp>
        <format property="build.today" pattern="yyyyMMdd"/>
    </tstamp>

    <!--=======================================================================-->
    <!-- Space task definition                                                 -->
    <!--=======================================================================-->
    <path id="lib.path">
        <fileset dir="lib" includes="**/*.jar"/>
    </path>
    <taskdef name="space" classname="com.mk.SpaceTask" classpathref="lib.path"/>

    <!--=======================================================================-->
    <!-- complete build                                                        -->
    <!--=======================================================================-->
    <target name="buildAll"
            depends="cleanupBefore,initit,generateCleanUpList,buildZero,buildMini,cleanupAfter"
            description="execute complete build"/>

    <!--=======================================================================-->
    <!-- zero                                                                  -->
    <!--=======================================================================-->
    <target name="buildZero"
            description="execute zero gapps build">
        <!-- preparations -->
        <property environment="env"/>
        <property name="file.name.zero"
                  value="${build.dir}/Slim_zero_gapps.BETA.${PRODUCT_VERSION_MAJOR}.${PRODUCT_VERSION_MINOR}.${PRODUCT_VERSION_MAINTENANCE}-${build.today}.zip"/>
        <delete dir="${work.dir}"/>
        <!-- copy files -->
        <copy todir="${work.dir}">
            <fileset dir="${structure.dir}">
                <exclude name="system/app/ConfigUpdater/**"/>
                <exclude name="system/app/ExchangeServices/**"/>
                <exclude name="system/priv-app/talkback/**"/>
                <exclude name="system/tts/**"/>
                <exclude name="system/vendor/pittpatt/**"/>
                <exclude name="optional/**"/>
                <exclude name="install-optional.sh"/>
                <exclude name="dynamic.sh"/>
                <exclude name="dynamic/FaceLock/**"/>
                <exclude name="dynamic/Velvet/**"/>
            </fileset>
            <fileset dir="${structure.dir}">
                <include name="tmp/**"/>
                <include name="**/size_check.sh/"/>
            </fileset>
        </copy>


        <antcall target="createUpdaterScript-zero"/>
        <antcall target="createDynamicScript-zero"/>
        <antcall target="copyAddonsAndGenerateBackup"/>

        <!-- zip and sign it -->
        <antcall target="ZipAndSigning">
            <param name="hfile.name" value="${file.name.zero}"/>
        </antcall>
    </target>

    <!--=======================================================================-->
    <!-- mini                                                                  -->
    <!--=======================================================================-->
    <target name="buildMini"
            description="execute mini gapps build">
        <!-- preparations -->
        <property environment="env"/>
        <property name="file.name.mini"
                  value="${build.dir}/Slim_mini_gapps.BETA.${PRODUCT_VERSION_MAJOR}.${PRODUCT_VERSION_MINOR}.${PRODUCT_VERSION_MAINTENANCE}-${build.today}.zip"/>
        <delete dir="${work.dir}"/>
        <!-- copy files -->
        <copy todir="${work.dir}">
            <fileset dir="${structure.dir}"/>
        </copy>

        <antcall target="createUpdaterScript-zero"/>
        <antcall target="copyAddonsAndGenerateBackup"/>

        <antcall target="ZipAndSigning">
            <param name="hfile.name" value="${file.name.mini}"/>
        </antcall>

    </target>

    <!--======================================================================-->
    <!-- Create updater script - removing #zero                               -->
    <!--======================================================================-->
    <target name="createUpdaterScript-zero">
        <copy file="${app.dir}/extras/updater-script" todir="${work.dir}/META-INF/com/google/android">
            <filterchain>
                <replaceregex pattern="@package@" replace="zero" flags="i"/>
                <replaceregex pattern="@cleanup.list@" replace="${cleanup.list}" flags="i"/>
                <linecontains negate="true">
                    <contains value="#zero"/>
                </linecontains>
            </filterchain>
        </copy>
    </target>


    <!--======================================================================-->
    <!-- Create updater script - with #zero                                   -->
    <!--======================================================================-->
    <target name="createUpdaterScript">
        <copy file="${app.dir}/extras/updater-script" todir="${work.dir}/META-INF/com/google/android">
            <filterchain>
                <replaceregex pattern="@package@" replace="mini" flags="i"/>
                <replaceregex pattern="@cleanup.list@" replace="${cleanup.list}" flags="i"/>
            </filterchain>
        </copy>
    </target>

    <!--======================================================================-->
    <!-- Create dynamic script - removing #zero                               -->
    <!--======================================================================-->
    <target name="createDynamicScript-zero">

        <copy file="${structure.dir}/dynamic.sh" todir="${work.dir}">
            <filterchain>
                <linecontains negate="true">
                    <contains value="#zero"/>
                </linecontains>
            </filterchain>
        </copy>
    </target>


    <!--======================================================================-->
    <!-- Copy addon and generate gapps backup from work dir file              -->
    <!--======================================================================-->
    <target name="copyAddonsAndGenerateBackup">

        <!-- generate backup script -->
        <copy todir="${work.dir}/system/addon.d" >
            <fileset dir="${extra.dir}">
                <exclude name="space.sh"/>
                <include name="*.sh"/>
            </fileset>
        </copy>

        <path id="item.file">
            <fileset dir="${work.dir}/system">
                <exclude name="**/*.sh"/>
            </fileset>
            <fileset dir="${work.dir}/system/su.d">
                <include name="**/permissive.sh"/>
            </fileset>
            <fileset dir="${work.dir}/optional/" erroronmissingdir="false"/>
            <fileset dir="${work.dir}/dynamic/" erroronmissingdir="false">
                <exclude name="**/*.sh"/>
            </fileset>
        </path>

        <space dir="${work.dir}" exclude="META-INF,.sh" property="file.size.prop">
            <map from="/optional" to="/system"/>
            <map from="/dynamic/FaceLock/arm" to="/system"/>
            <map from="/dynamic/PrebuiltGmsCore/230" to="/system"/>
            <map from="/dynamic/PrebuiltGmsCore/arm" to="/system"/>
            <map from="/dynamic/Swypelib" to="/system"/>
            <map from="/dynamic/Velvet/arm" to="/system"/>
        </space>
        <echo file="${work.dir}/apps_space.prop">${file.size.prop}</echo>
        <replace file="${work.dir}/apps_space.prop" token="\" value="/"/>


        <pathconvert refid="item.file" property="file.list.backup" pathsep="&#10;" dirsep="/">
            <map from="${work.dir}/system/" to=""/>
            <map from="${work.dir}/optional/common/" to=""/>
            <map from="${work.dir}/optional/face/" to=""/>
            <map from="${work.dir}/optional/hammerhead/" to=""/>
            <map from="${work.dir}/optional/manta/" to=""/>
            <map from="${work.dir}/optional/shamu/" to=""/>
            <map from="${work.dir}/optional/tuna/" to=""/>
            <map from="${work.dir}/dynamic/FaceLock/arm/" to=""/>
            <map from="${work.dir}/dynamic/PrebuiltGmsCore/230/" to=""/>
            <map from="${work.dir}/dynamic/PrebuiltGmsCore/arm/" to=""/>
            <map from="${work.dir}/dynamic/Swypelib/" to=""/>
            <map from="${work.dir}/dynamic/Velvet/arm/" to=""/>
        </pathconvert>
        <replaceregexp match="@file.list@" replace="${file.list.backup}" flags="i" byline="true">
            <fileset dir="${work.dir}/system/addon.d">
                <include name="**/*-gapps.sh"/>
            </fileset>
        </replaceregexp>
    </target>


    <!--=======================================================================-->
    <!-- generate clean up list                                                     -->
    <!--=======================================================================-->
    <target name="generateCleanUpList">
        <path id="cleanup.file">
            <fileset dir="${extra.dir}">
                <include name="*.sh"/>
            </fileset>
            <fileset dir="${structure.dir}/system"/>
            <fileset dir="${structure.dir}/optional/"/>
            <fileset dir="${structure.dir}/dynamic/"/>
        </path>
        <pathconvert refid="cleanup.file" property="cleanup.list" pathsep="&quot;,&#10;&quot;" dirsep="/">
            <map from="${extra.dir}" to="/system/addon.d"/>
            <map from="${structure.dir}/system/" to="/system/"/>
            <map from="${structure.dir}/optional/common/" to="/system/"/>
            <map from="${structure.dir}/optional/hammerhead/" to="/system/"/>
            <map from="${structure.dir}/optional/manta/" to="/system/"/>
            <map from="${structure.dir}/optional/shamu/" to="/system/"/>
            <map from="${structure.dir}/dynamic/FaceLock/arm/" to="/system/"/>
            <map from="${structure.dir}/dynamic/PrebuiltGmsCore/230/" to="/system/"/>
            <map from="${structure.dir}/dynamic/PrebuiltGmsCore/arm/" to="/system/"/>
            <map from="${structure.dir}/dynamic/Swypelib/" to="/system/"/>
            <map from="${structure.dir}/dynamic/Velvet/arm/" to="/system/"/>
        </pathconvert>
    </target>

    <!--=======================================================================-->
    <!-- zip and sign it                                                       -->
    <!--=======================================================================-->
    <target name="ZipAndSigning">
        <zip destfile="${build.dir}/unsigned.zip" basedir="${work.dir}"/>
        <echo message="Signing gapps"/>
        <java dir="${build.dir}" fork="true" failonerror="true" maxmemory="1536m" jar="${sign.jar}">
            <arg value="-w"/>
            <arg value="${sign.pem}"/>
            <arg value="${sign.pk8}"/>
            <arg value="${build.dir}/unsigned.zip"/>
            <arg value="${hfile.name}"/>
        </java>
    </target>

    <!--=======================================================================-->
    <!-- cleanupBefore new build                                               -->
    <!--=======================================================================-->
    <target name="cleanupBefore"
            description="delete old directories">
        <delete dir="${build.dir}"/>
        <delete dir="${work.dir}"/>
    </target>

    <!--=======================================================================-->
    <!-- cleanupAfter build is done                                            -->
    <!--=======================================================================-->
    <target name="cleanupAfter"
            description="delete unnecessary build files">
        <echo message="Cleaning up"/>
        <delete file="${build.dir}/unsigned.zip"/>
        <delete file="${build.dir}/gapps.filenames"/>
    </target>

    <!--=======================================================================-->
    <!-- initiating build                                                      -->
    <!--=======================================================================-->
    <target name="initit"
            description="initiating-steps">
        <mkdir dir="${build.dir}"/>
        <mkdir dir="${work.dir}"/>
    </target>

</project>
